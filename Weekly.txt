20.12.21:
Was habe ich gemacht?
- Dokumentation des Projektes
- Lauffähig auf Laptop
- Projekt neu aufgesetzt, da wir nix mehr einlesen möchten
- Testprojekt in 3D um Unity besser zu lernen
- Maßstab ausmessen: Wie breit ist eine Tür im Verhältnis zum Agenten	
	-> Frauen: 39,5 cm Männner 55,5cm
	-> Tür: ?
- Unity Testprogramm: Wie funktioniert die UI, wie funktionieren RigidBodys und Boxcollider und ganz besonders wie man PreFabs nutzt um Objekte dynamisch zu erzeugen.
- A*-Algorithmus implementiert, läuft noch unrund, da Gebäude Geometrie unschön und AgentenAI-CircleCollider funktionieren nicht richtig.

Fragen?
- Wie genau cognitive maps implementieren? Mit Navigationspunkten? Dann brauch man ja kein Grid.

Was nehme ich mir vor?
- Einen Agenten per A*-zum Ausgang zu bewegen, die Zeit dabei anzuzeigen und rechtzeitig zu stoppen. Mit Prefabs die Agenten dynamisch im Code zu erzeugen.


27.12.21:
Was habe ich gemacht?
- Neues Repo in GitHub https://github.com/roberko44/Routenwahlverfahren
- Konzept zu cognitive maps. Was ist cognitive maps und was ist bei der Implementierung zu beachten.
- Cube Game vollendet. Dinge gelernt wie verschiedene Level (also Szenen), UI und wie Animationen in Unity funktionieren.
- Mehrere Agenten per Prefabs spawnen lassen.
- UI mit Evakuierungszeit.

Fragen?
Cognitve Maps Realisierung sehr schwierig.
Agenten blocken sich -> GameManager schaltet Rigidbody kurzzeitig aus?

Was nehme ich mir vor?
- Agent Quantity sauberer programmieren.
- Agenten blocken sich gegenseitig -> fixen
- Evakuierung stoppen wenn der letzte Agent ankam nicht der erste.
- UI mit Start und Agentenanzahl
- Cognitive Maps erster Ansatz, aber unabhängig vom eigentlichen Programm.

10.01.21:
Was habe ich gemacht?
Ein Gridsystem.

Fragen?
- Ein Agent läuft innerhalb seines gerenderten Bereiches zu der Stelle im Grid die sich am nähesten zum Ausgang befindet. Wie realisiert man aber nur einen bestimmten Bereich zu rendern? Ist das nicht quasi A*, mittendrin breakt man und lässt den Agenten laufen und wenn er angekommen ist, berechnet man weiter?
- Hat jeder Agent einen eigenen (also anderen) gerenderten Bereich?
- Wie wird dieser gerenderte Bereich ermittelt? Random? Nach Sichtweite?
- Wie programmiert man Cognitive Maps sichtbar? Rein theoretisch läuft der Agent zum ersten "Checkpoint" und hat darauf instant den nächsten "Checkpoint" berechnet. Simuliert würde das wie ein flüssiger Übergang aussehen. Brauch man da Breaks?
- Bei verallgemeinertem Wissen muss man dem Grid noch die Eigenschaft geben, zwischen Raum und Flur zu unterscheiden? Die Realisierung stellt sich als echt schwierig da. Die nahestehende Lösung wäre mehrere Grids (zum Beispiel für jeden Raum), aber wie soll man die für den Algorithmus verknüpfen?

Was nehme ich mir vor?
Grid:
- Einen lauffähigen Stand für Cognitive Maps (Agent über Grid laufen lassen)
- Grid zusammenfügen
- Nav Mesh in Unity (Bedeutung)

A*:
- Agent Quantity sauberer programmieren.
- Agenten blocken sich gegenseitig -> fixen
- Evakuierung stoppen wenn der letzte Agent ankam nicht der erste.
- UI mit Start und Agentenanzahl


18.01.21:
Was habe ich gemacht?
- Ein Gridsystem mit Nodes und A*-Pathfinding

Fragen?
- Cognitive Maps zu realsieren bis zum 24.01 wird quasi unmöglich.
- Soll ich die Probleme im alten System nicht fixen?
- Was schreibe ich mit dem Stand in der Bachelorarbeit?

Was nehme ich mir vor?
- Grid Merging (Corner + Borderhandling) / A* kennt mehrere Grids
- 1 Grid mit hohen Kosten an der Tür, Zellen zwischen 2 Räumen senken
- Demo?
- In der BA: Diskussion nach Technische Analyse

Im alten Programm:
- Agent Quantity sauberer programmieren.
- Agenten blocken sich gegenseitig -> fixen
- Evakuierung stoppen wenn der letzte Agent ankam nicht der erste.
- UI mit Start und Agentenanzahl

25.01.21
Was habe ich gemacht?
Grid Merging

Fragen?
- Merging funktioniert nicht so gut. Wir mergen nicht direkt alle Grids, sondern erst wenn der Agent ein neuen Grid betritt, dann wird er zu seinem Wissen hinzugefügt. Dort gibt es einige Probleme beim Spannen der Grids und nicht nachvollziehbare Fehlermeldungen.
Jedes Grid hat einen BoxCollider, welcher triggert, wenn der Agent das Grid betritt. Daraufhin wird die Funktion AddRoom() der neuen "Manager"-Klasse aufgerufen und das Grid in das Dictionary der Manager Klasse hinzugefügt. Problem hier macht die Merging-Funktion und das dazugehörige updaten des neuen dynamischen Grids.
Die Grids spannen falsch und das Pathfinding funktioniert nicht mehr. Das Programm wurde ursprünglich nicht darauf ausgelegt, weswegen jede Änderung sehr komplex für mich ist.

Was nehme ich mir vor?
PROGRAMM:
- AABB als Hilfe
- Index in Index Funktion
- Lieber Top Right anstatt Lower Left


BA:
- Gliederung
- Diskussion nach Technische Analyse